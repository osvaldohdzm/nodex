/* frontend/src/styles/GraphPage.css */

.graph-page-container {
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100vh;
  min-height: 100vh;
  background-color: var(--bg-primary);
  color: var(--text-primary);
  overflow: hidden;
}

/* Barra superior */
.top-bar {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: 0.5rem 1rem;
  background-color: var(--bg-secondary);
  border-bottom: 1px solid var(--input-border);
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
  flex-shrink: 0;
  z-index: 10;
}

/* Botones de acción */
.graph-action-button {
  display: flex;
  align-items: center;
  gap: 0.5rem;
  padding: 0.5rem 1rem;
  font-size: 0.875rem;
  font-weight: 500;
  border-radius: 0.375rem;
  transition: all 0.2s ease;
  background-color: transparent;
  color: var(--text-primary);
  border: 1px solid transparent;
}

.graph-action-button:hover:not(:disabled) {
  background-color: var(--accent-cyan/10);
  color: var(--accent-cyan);
}

.graph-action-button:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

/* Contenedor del grafo */
.graph-viewport-wrapper {
  width: 100%;
  height: 100%;
  position: relative;
  background-color: var(--graph-bg);
  border-radius: 0.5rem;
  overflow: hidden;
}

/* Panel de detalles */
.details-panel {
  display: flex;
  flex-direction: column;
  height: 100%;
  background-color: var(--bg-secondary);
  border-left: 1px solid var(--input-border);
  box-shadow: -2px 0 4px rgba(0, 0, 0, 0.1);
}

.details-panel-header {
  display: flex;
  justify-content: space-between;
  align-items: center;
  padding: 0.75rem 1rem;
  border-bottom: 1px solid var(--input-border);
  flex-shrink: 0;
}

.details-panel-content {
  flex: 1;
  overflow: auto;
  padding: 1rem;
}

/* Mensaje de placeholder */
.placeholder-message {
  position: absolute;
  inset: 0;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  color: var(--text-secondary);
  font-size: 1rem;
  padding: 1.5rem;
  text-align: center;
  background-color: var(--bg-primary);
  pointer-events: none;
}

.upload-panel {
  padding: 1rem;
  background-color: var(--bg-secondary);
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  border-radius: 0.5rem;
  flex-shrink: 0;
}

.panel-title {
  font-size: 1.25rem;
  font-weight: 600;
  margin-bottom: 0.5rem;
  color: var(--accent-cyan);
  text-align: center;
}

.upload-panel-content {
  display: flex;
  flex-direction: row;
  align-items: stretch; /* Make children same height */
  justify-content: space-between; /* Distribute space between children */
  gap: 1rem; /* Reduced gap */
  margin-top: 0.5rem; /* Reduced margin */
}

.upload-area {
  flex: 1; /* Share space equally */
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  padding: 0.5rem; /* Reduced padding */
  border: 1px dashed var(--input-border-hover);
  border-radius: 0.5rem;
  text-align: center;
  min-height: 120px; /* Reduced min-height */
}

.loaded-file-info {
  flex: 1; /* Share space equally */
  display: flex;
  flex-direction: column;
  align-items: center; /* Center children horizontally */
  justify-content: center; /* Also center vertically */
  padding: 0.5rem; /* Reduced padding */
  border: 1px dashed var(--input-border-hover);
  border-radius: 0.5rem;
  min-height: 120px; /* Reduced min-height */
}

.file-name-display {
  font-size: 0.75rem;
  color: var(--text-secondary);
  margin-top: 0.75rem;
  text-align: center;
}

.action-buttons-container {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  gap: 1rem;
  margin-top: 1rem;
}

.graph-viewport-container {
  flex: 1 1 auto; /* Changed from flex-grow/flex-shrink/flex-basis to shorthand */
  display: flex; /* Added to ensure proper flex behavior */
  width: 100%; /* Explicit width */
  height: calc(100vh - 300px); /* Explicit height, accounting for header and upload panel */
  min-height: 400px; /* Keep minimum height */
  margin-top: 1rem;
  background-color: var(--graph-bg);
  border-radius: 0.5rem;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.2);
  position: relative;
  overflow: hidden;
  box-sizing: border-box;
}

.reactflow-wrapper {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  box-sizing: border-box;
}

.json-details-viewer {
  width: 100%;
  max-width: 40rem;
  margin-top: 1rem;
  text-align: left;
}

.json-details-summary {
  cursor: pointer;
  color: var(--accent-cyan);
  text-decoration: underline;
  font-weight: 600;
}

.json-details-pre {
  font-size: 0.75rem;
  white-space: pre-wrap;
  word-break: break-word;
  color: var(--text-secondary);
  overflow: auto;
  max-height: 20rem;
  margin-top: 0.5rem;
  padding: 0.75rem;
  background-color: var(--input-bg);
  border-radius: 0.5rem;
  border: 1px solid var(--input-border);
}

.graph-page-center {
  display: flex;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100vh; /* Full viewport height */
  min-height: 100vh;
  overflow: hidden; /* Prevent scrolling */
}

/* Adding styles for scroll functionality and scrollbar customization */
.graph-page-container .overflow-auto {
  overflow: auto;
  max-height: 80vh; /* Limit height for scrolling */
}

/* Custom scrollbar styles */
.graph-page-container .overflow-auto::-webkit-scrollbar {
  width: 8px;
}

.graph-page-container .overflow-auto::-webkit-scrollbar-thumb {
  background-color: var(--accent-cyan-darker);
  border-radius: 4px;
}

.graph-page-container .overflow-auto::-webkit-scrollbar-track {
  background-color: var(--bg-secondary);
}

/* Styles for the resizable details section */
.details-section {
  position: relative;
  background-color: var(--bg-secondary);
  border: 1px solid var(--input-border-hover);
  overflow: auto;
}

.resize-handle {
  position: absolute;
  bottom: 0;
  left: 0;
  width: 100%;
  height: 10px;
  cursor: ns-resize;
  background-color: var(--accent-cyan);
}

/* Estilos para los nodos */
.react-flow__node {
  transition: all 0.2s ease;
  border-radius: 0.5rem;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
}

.react-flow__node:hover {
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  transform: translateY(-1px);
}

.react-flow__node.selected {
  box-shadow: 0 0 0 2px var(--accent-cyan), 0 4px 8px rgba(0, 0, 0, 0.2);
}

/* Estilos para los handles */
.react-flow__handle {
  width: 8px;
  height: 8px;
  background-color: var(--accent-cyan);
  border: 2px solid var(--bg-primary);
  transition: all 0.2s ease;
}

.react-flow__handle:hover {
  transform: scale(1.2);
  background-color: var(--accent-cyan-darker);
}

.handle-source {
  background-color: var(--accent-pink) !important;
}

.handle-target {
  background-color: var(--accent-green) !important;
}

/* Estilos para las aristas */
.react-flow__edge {
  transition: all 0.2s ease;
}

.react-flow__edge:hover {
  filter: brightness(1.2);
}

.react-flow__edge.selected {
  filter: brightness(1.4);
}

.react-flow__edge-path {
  stroke-width: 2;
  transition: all 0.2s ease;
}

.react-flow__edge-text {
  font-size: 0.75rem;
  fill: var(--text-primary);
  text-anchor: middle;
  dominant-baseline: middle;
  pointer-events: none;
  transition: all 0.2s ease;
}

.react-flow__edge-text:hover {
  fill: var(--accent-cyan);
}

/* Animaciones */
.edge-appear {
  animation: edgeAppear 0.4s ease-out forwards;
}

.edge-appear-static {
  animation: none;
}

@keyframes edgeAppear {
  0% {
    opacity: 0;
    stroke-dasharray: 5;
    stroke-dashoffset: 100;
  }
  100% {
    opacity: 1;
    stroke-dasharray: none;
    stroke-dashoffset: 0;
  }
}

.node-appear {
  animation: nodeAppear 0.4s ease-out forwards;
}

.node-appear-static {
  animation: none;
}

@keyframes nodeAppear {
  0% {
    opacity: 0;
    transform: scale(0.8);
  }
  100% {
    opacity: 1;
    transform: scale(1);
  }
}

/* Línea de conexión */
.react-flow__connection-path {
  stroke: var(--accent-cyan);
  stroke-width: 2;
}

.react-flow__connection-line {
  stroke: var(--accent-cyan);
  stroke-width: 2;
  stroke-dasharray: 5;
}

/* Estilos para el nodo cuando se está arrastrando una conexión */
.react-flow__node.react-flow__node-dragging .react-flow__handle {
  opacity: 1;
  transform: scale(1.2);
}